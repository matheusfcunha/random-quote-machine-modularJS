"use strict";var Background=function(){var u={};function e(){var e,o,i;e="https://source.unsplash.com/random",o="",(i=new XMLHttpRequest).onreadystatechange=function(e){var n,t;i.addEventListener("error",function(){console.log(e.getAllResponseHeaders)}),200==i.status&&4==i.readyState&&(o=i.responseURL,n=o,(t=new Image).onload=function(){null!=u.loadingGif&&u.loadingGif.remove(),u.body.background="url('"+t.src+"') no-repeat center center fixed",u.body.backgroundSize="cover"},t.src=n)},i.open("GET",e,!0),i.send()}return{init:function(){u.body=document.getElementsByTagName("body")[0].style,u.loadingGif=document.getElementById("loading-gif"),e()},changeBackground:function(){e()}}}(),Quote=function(){var u={};function c(e,n){u.quoteDiv=document.getElementById("quote-div"),null!=e&&(u[e]=n)}function r(){var e={endpoint:"https://quotesondesign.com/wp-json/posts",params:{"filter[orderby]":"rand","filter[posts_per_page]":10,cachingHack:(new Date).getTime()}};$.getJSON(e.endpoint,e.params).then(n).catch(function(e){console.log(e)})}function n(e){e=e.filter(function(e){return e.content.length<89}),console.log(e);var n=e[0].content;89<n.length?r():function(e){null===document.getElementById("quote-box")&&function(){var e=document.createElement("div");e.setAttribute("id","quote-box");var n=document.createElement("h1"),t=document.createTextNode("");n.appendChild(t),n.setAttribute("id","quote-text"),e.appendChild(n);var o=document.createElement("IMG");o.src="img/shuffle.png",o.setAttribute("id","shuffle-icon"),u.quoteDiv.appendChild(e),u.quoteDiv.appendChild(o),c("shuffleIcon",document.getElementById("shuffle-icon")),i=document.getElementById("shuffle-icon"),i.addEventListener("click",function(){var e;e=u.shuffleIcon,setTimeout(function(){Background.changeBackground(),r()},1500),e.src="img/loading2.gif",e.style.pointerEvents="none",$("#quote-text").fadeOut(2e3)});var i}();$("#quote-text").fadeIn(1200,function(){u.shuffleIcon.src="img/shuffle.png",u.shuffleIcon.style.pointerEvents="all"}),document.getElementById("quote-text").innerHTML=e}(n)}function e(){r()}return{init:function(){c(),e()},render:e}}();Quote.init(),Background.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
